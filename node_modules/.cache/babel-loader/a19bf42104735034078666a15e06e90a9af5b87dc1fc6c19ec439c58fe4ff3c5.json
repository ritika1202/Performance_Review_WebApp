{"ast":null,"code":"var _jsxFileName = \"/Users/ritikarani/Documents/MyProject/src/component/IndividualProjectChart.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport './BarGraph.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction splitLongLabels(labels) {\n  var i = 0,\n    len = labels.length;\n  var splitlabels = labels;\n  while (i < len) {\n    var words = labels[i].trim().split(\" \");\n    if (words.length > 1 && words.length <= 3) {\n      splitlabels[i] = words;\n    } else if (words.length > 3) {\n      splitlabels[i] = words.slice(0, 3);\n      splitlabels[i].push(\"....\");\n    }\n    i++;\n  }\n  return splitlabels;\n}\nfunction IndividualProjectChart({\n  individual_data,\n  clickedLabel,\n  Onclick\n}) {\n  let projectWiseData = individual_data[clickedLabel];\n  const onChange = event => {\n    const value = event.target.value;\n    Onclick(value);\n    projectWiseData = individual_data[value];\n  };\n  const data = {\n    labels: splitLongLabels(Object.keys(projectWiseData)),\n    datasets: [{\n      // Label for Comparison bar graph\n      label: \"Inprogress\",\n      borderSkipped: 'left',\n      // Data or value of your each variable\n      data: Object.values(projectWiseData).map(record => {\n        return record.in_progress;\n      }),\n      // Color of each bar\n      backgroundColor: [\"#87bdd8\"]\n    }, {\n      // Label for Comparison bar graph\n      label: \"Completed\",\n      // Data or value of your each variable\n      data: Object.values(projectWiseData).map(record => {\n        return record.completed;\n      }),\n      // Color of each bar\n      backgroundColor: [\"#93C572\"]\n    }, {\n      // Label for Comparison bar graph\n      label: \"Todo\",\n      // Data or value of your each variable\n      data: Object.values(projectWiseData).map(record => {\n        return record.yet_to_do;\n      }),\n      // Color of each bar\n      backgroundColor: [\"#ff6f69\"]\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        beginAtZero: true,\n        font: 10,\n        ticks: {\n          autoSkip: false,\n          // retricts rotation of x-labels\n          maxRotation: 0,\n          minRotation: 0\n        },\n        title: {\n          display: true,\n          text: clickedLabel + ' OD/BD Sections',\n          font: {\n            weight: 'bold',\n            size: 15\n          }\n        },\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Employee count',\n          font: {\n            weight: 'bold',\n            size: 15\n          }\n        },\n        ticks: {\n          min: 0,\n          stepSize: 10\n        },\n        grid: {\n          display: false\n        }\n      }\n    },\n    responsive: true,\n    barPercentage: 1,\n    plugins: {\n      tooltip: {\n        enabled: true,\n        callbacks: {\n          title: tooltipItems => {\n            let key_label = Object.keys(projectWiseData);\n            return key_label[tooltipItems[0].dataIndex];\n          }\n        }\n      },\n      interaction: {\n        includeInvisible: true\n      },\n      title: {\n        display: true\n      },\n      legend: {\n        display: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-graph-title\",\n      children: clickedLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-list\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: clickedLabel,\n        onChange: onChange,\n        children: Object.keys(individual_data).map((value, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: value,\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 56\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      width: 900,\n      height: 400,\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 2\n  }, this);\n}\n_c = IndividualProjectChart;\nexport default IndividualProjectChart;\nvar _c;\n$RefreshReg$(_c, \"IndividualProjectChart\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Bar","jsxDEV","_jsxDEV","splitLongLabels","labels","i","len","length","splitlabels","words","trim","split","slice","push","IndividualProjectChart","individual_data","clickedLabel","Onclick","projectWiseData","onChange","event","value","target","data","Object","keys","datasets","label","borderSkipped","values","map","record","in_progress","backgroundColor","completed","yet_to_do","options","scales","x","beginAtZero","font","ticks","autoSkip","maxRotation","minRotation","title","display","text","weight","size","grid","y","min","stepSize","responsive","barPercentage","plugins","tooltip","enabled","callbacks","tooltipItems","key_label","dataIndex","interaction","includeInvisible","legend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","index","width","height","_c","$RefreshReg$"],"sources":["/Users/ritikarani/Documents/MyProject/src/component/IndividualProjectChart.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n import { Bar} from \"react-chartjs-2\";\r\nimport './BarGraph.css';\r\n\r\nfunction splitLongLabels(labels){\r\n \r\n    var i = 0, len = labels.length;\r\n    var splitlabels = labels;\r\n    while (i < len) {\r\n        var words = labels[i].trim().split(\" \");\r\n\r\n        if(words.length>1 && words.length<=3){\r\n      splitlabels[i] = words;\r\n        } \r\n\r\n\t\telse if(words.length>3)\r\n         {\r\n\t\t\tsplitlabels[i]=(words.slice(0,3));\r\n\t\t\tsplitlabels[i].push(\"....\");\r\n\t\t }\r\n\r\n        i++;\r\n        }\r\n    return splitlabels;\r\n}\r\n\r\n\r\nfunction IndividualProjectChart({individual_data,clickedLabel, Onclick}) {\r\n\t\r\n\tlet projectWiseData = individual_data[clickedLabel];\r\n\r\n\tconst onChange = (event) => {\r\n\t\tconst value = event.target.value;\r\n\t\tOnclick(value);\r\n\t    projectWiseData = individual_data[value];\r\n\t  };\r\n\r\n\t  \r\n\tconst data={\r\n\t\tlabels: splitLongLabels(Object.keys(projectWiseData)),\r\n\t\tdatasets: [\r\n\t\t{\r\n\t\t\t// Label for Comparison bar graph\r\n\t\t\tlabel: \"Inprogress\",\r\n\t\t\tborderSkipped: 'left',\r\n\t\t\t// Data or value of your each variable\r\n\t\t\tdata: Object.values(projectWiseData).map(record=>{return (record.in_progress)}),\r\n\t\t\t// Color of each bar\r\n\t\t\tbackgroundColor: [\"#87bdd8\"],\r\n\t\t\t\r\n\t\t},\r\n\t\t {\r\n\t\t\t// Label for Comparison bar graph\r\n\t\t\tlabel: \"Completed\",\r\n\t\t\t// Data or value of your each variable\r\n\t\t\tdata:Object.values(projectWiseData).map(record=>{return (record.completed)}),\r\n\t\t\t// Color of each bar\r\n\t\t\tbackgroundColor: [\"#93C572\"],\r\n\t\t\t\r\n\t\t}, \r\n\t\t{\r\n\t\t\t// Label for Comparison bar graph\r\n\t\t\tlabel: \"Todo\",\r\n\t\t\t// Data or value of your each variable\r\n\t\t\tdata: Object.values(projectWiseData).map(record=>{return (record.yet_to_do)}),\r\n\t\t\t// Color of each bar\r\n\t\t\tbackgroundColor: [\"#ff6f69\"],\r\n\t\t\t\r\n\t\t},\r\n\t\t],\r\n\t\r\n\t} \r\n\tconst options = {\r\n\t\tscales: {\r\n\t\t\t\r\n\t\t\tx: {\r\n\t\t\t  beginAtZero: true,\r\n\t\t\t  font:10, \t\r\n\t\t\t  ticks:\r\n\t\t\t  {\r\n                 autoSkip: false,\r\n\t\t\t\t // retricts rotation of x-labels\r\n                maxRotation: 0,\r\n                minRotation: 0\r\n\t\t\t  },\r\n\t\t\t  title: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\ttext: clickedLabel+' OD/BD Sections',\r\n\t\t\t\t\r\n\t\t\t\tfont:\r\n\t\t\t\t{\r\n\t\t\t\t\tweight:'bold',\r\n\t\t\t\t\tsize:  15\r\n\t\t\t\t} },\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tdisplay: false\r\n\t\t\t\t  }\r\n\t\t\t  \r\n\t\t\t},\r\n\t\t\ty: {\r\n\t\t\t  beginAtZero: true, \r\n\t\t\t  title: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\ttext: 'Employee count',\r\n\t\t\t\tfont:\r\n\t\t\t\t{\r\n\t\t\t\t\tweight:'bold',\r\n\t\t\t\t\tsize:  15,\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tticks: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\tstepSize: 10,\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tgrid: {\r\n\t\t\t\tdisplay: false\r\n\t\t\t  }\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t  },\r\n\r\n\r\n\t\tresponsive : true, \r\n\t\tbarPercentage:1,\r\n\r\n\r\n\t\tplugins: {\r\n\t\t\ttooltip: {\r\n\r\n\t\t\t\tenabled: true,\r\n\t\t\t\t callbacks: {\r\n\t\t\t\ttitle:  (tooltipItems)=>{\r\n\t\t\t\t\t      let key_label=Object.keys(projectWiseData);\r\n\t\t\t\t\t\treturn key_label[tooltipItems[0].dataIndex];\r\n\t\t\t\t\t \r\n\t\t\t\t},\r\n\t\t\t\t }\r\n\t\t\t  },\t\t  \r\n\t\t\tinteraction : {\r\n\t\t\t\tincludeInvisible: true,\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\tdisplay: true,\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t   display: false,\r\n\t\t\t}\r\n\t\t }\r\n\t\t}\r\n\t\r\nreturn (\r\n\t<div>\r\n           <div className=\"project-graph-title\">{clickedLabel}</div>\r\n\t\t    <div className=\"project-list\"> \r\n\t\t\t<select value={clickedLabel} onChange={onChange}>\r\n\t\t\t{Object.keys(individual_data).map((value, index) => <option value={value} >{value}</option>)}\r\n\t\t\t</select>\r\n\t\t\t</div> \r\n\r\n\t\t  <Bar width={900} height={400} data={data} options={options}/>\r\n\t</div>\r\n\t\r\n);\r\n}\r\n\r\nexport default IndividualProjectChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}