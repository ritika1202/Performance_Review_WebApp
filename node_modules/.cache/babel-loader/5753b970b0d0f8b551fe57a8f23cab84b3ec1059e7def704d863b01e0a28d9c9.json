{"ast":null,"code":"var _jsxFileName = \"/Users/ritikarani/Documents/MyProject/src/component/ProjectWiseChart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectWiseChart(props) {\n  const handleClick = (event, activeElements) => {\n    if (activeElements.length > 0) {\n      const clickedLabel = data.labels[activeElements[0].index];\n      props.Onclick(clickedLabel);\n      window.scrollBy(0, 645);\n    }\n  };\n  const data = {\n    // Name of the variables on x-axies for each bar\n    labels: Object.keys(props.data),\n    datasets: [{\n      // Label for bars\n      label: \"Inprogress\",\n      borderSkipped: 'left',\n      //Mapped Data or value for each Project\n      data: Object.values(props.data).map(record => {\n        return record.in_progress;\n      }),\n      // Color of each bar\n      backgroundColor: [\"#87bdd8\"]\n    }, {\n      // Label for bars\n      label: \"Completed\",\n      // Mapped Data or value for each Project\n      data: Object.values(props.data).map(record => {\n        return record.completed;\n      }),\n      // Color of each bar\n      backgroundColor: [\"#93C572\"]\n    }, {\n      // Label for bars\n      label: \"Todo\",\n      // Mapped Data or value for each Project\n      data: Object.values(props.data).map(record => {\n        return record.yet_to_do;\n      }),\n      // Color of each bar\n      backgroundColor: [\"#ff6f69\"]\n    }]\n  };\n  const options = {\n    responsive: true,\n    barPercentage: 1,\n    onClick: handleClick,\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Projects',\n          font: {\n            weight: 'bold',\n            size: 15\n          }\n        },\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Section count',\n          font: {\n            weight: 'bold',\n            size: 15\n          }\n        },\n        ticks: {\n          min: 0,\n          stepSize: 5\n        },\n        grid: {\n          display: false\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    height: 100,\n    data: data,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_c = ProjectWiseChart;\nexport default ProjectWiseChart;\nvar _c;\n$RefreshReg$(_c, \"ProjectWiseChart\");","map":{"version":3,"names":["Bar","jsxDEV","_jsxDEV","ProjectWiseChart","props","handleClick","event","activeElements","length","clickedLabel","data","labels","index","Onclick","window","scrollBy","Object","keys","datasets","label","borderSkipped","values","map","record","in_progress","backgroundColor","completed","yet_to_do","options","responsive","barPercentage","onClick","scales","x","title","display","text","font","weight","size","grid","y","ticks","min","stepSize","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ritikarani/Documents/MyProject/src/component/ProjectWiseChart.js"],"sourcesContent":["import { Bar } from \"react-chartjs-2\";\r\n\r\nfunction ProjectWiseChart (props) {\r\n\r\n    const handleClick = (event, activeElements) => {\r\n\t\tif (activeElements.length > 0) {\r\n\t\t  const clickedLabel = data.labels[activeElements[0].index];\r\n\t\t  props.Onclick(clickedLabel);\r\n\t\t  window.scrollBy(0, 645);\r\n\t\t}\r\n\t  };\r\n\r\n\tconst data={\r\n\t\t// Name of the variables on x-axies for each bar\r\n\t\tlabels: Object.keys(props.data),\r\n\t\tdatasets: [\r\n\t\t{ // Label for bars\r\n\t\t\tlabel: \"Inprogress\",\r\n\t\t\tborderSkipped: 'left',\r\n\t\t\t//Mapped Data or value for each Project\r\n\t\t\tdata :  Object.values(props.data).map(record=>{return (record.in_progress)}),\r\n\t\t\t// Color of each bar\r\n\t\t\tbackgroundColor: [\"#87bdd8\"],\r\n\t\t\t\r\n\t\t},\r\n\t\t {\r\n\t\t\t// Label for bars\r\n\t\t\tlabel: \"Completed\",\r\n\t\t\t// Mapped Data or value for each Project\r\n\t\t\tdata: Object.values(props.data).map(record=>{return (record.completed)}),\r\n\t\t\t// Color of each bar\r\n\t\t\tbackgroundColor: [\"#93C572\"],\r\n\t\t\t\r\n\t\t}, \r\n\t\t{\r\n\t\t\t// Label for bars\r\n\t\t\tlabel: \"Todo\",\r\n\t\t\t// Mapped Data or value for each Project\r\n\t\t\tdata:Object.values(props.data).map(record=>{return (record.yet_to_do)}),\r\n\t\t\t// Color of each bar\r\n\t\t\tbackgroundColor: [\"#ff6f69\"],\r\n\t\t\t\r\n\t\t},\r\n\t\t],\r\n\t}\r\nconst options={\r\n\t\tresponsive: true,\r\n\t\t\tbarPercentage:1,\r\n\t\t onClick: handleClick,\r\n\t\t scales: {\r\n\t\t\tx: {\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\ttext: 'Projects',\r\n\t\t\t\t\tfont:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tweight:'bold',\r\n\t\t\t\t\t\tsize:  15,\r\n\t\t\t\t\t}},\r\n\t\t\t  grid: {\r\n\t\t\t\tdisplay: false\r\n\t\t\t  }\r\n\t\t\t  \r\n\t\t\t},\r\n\t\t\ty: {\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\ttext: 'Section count',\r\n\t\t\t\t\tfont:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tweight:'bold',\r\n\t\t\t\t\t\tsize:  15,\r\n\t\t\t\t\t}},\r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\tstepSize: 5,\r\n\t\t\t\t\t},\r\n\t\t\t  grid: {\r\n\t\t\t\tdisplay: false\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  }\r\n\t}\r\n\r\n\r\n    return (\r\n        <Bar height={100} data={data} options={options} />\r\n    );\r\n}\r\n\r\nexport default ProjectWiseChart;"],"mappings":";AAAA,SAASA,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,gBAAgBA,CAAEC,KAAK,EAAE;EAE9B,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,cAAc,KAAK;IACjD,IAAIA,cAAc,CAACC,MAAM,GAAG,CAAC,EAAE;MAC7B,MAAMC,YAAY,GAAGC,IAAI,CAACC,MAAM,CAACJ,cAAc,CAAC,CAAC,CAAC,CAACK,KAAK,CAAC;MACzDR,KAAK,CAACS,OAAO,CAACJ,YAAY,CAAC;MAC3BK,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACzB;EACC,CAAC;EAEH,MAAML,IAAI,GAAC;IACV;IACAC,MAAM,EAAEK,MAAM,CAACC,IAAI,CAACb,KAAK,CAACM,IAAI,CAAC;IAC/BQ,QAAQ,EAAE,CACV;MAAE;MACDC,KAAK,EAAE,YAAY;MACnBC,aAAa,EAAE,MAAM;MACrB;MACAV,IAAI,EAAIM,MAAM,CAACK,MAAM,CAACjB,KAAK,CAACM,IAAI,CAAC,CAACY,GAAG,CAACC,MAAM,IAAE;QAAC,OAAQA,MAAM,CAACC,WAAW;MAAC,CAAC,CAAC;MAC5E;MACAC,eAAe,EAAE,CAAC,SAAS;IAE5B,CAAC,EACA;MACA;MACAN,KAAK,EAAE,WAAW;MAClB;MACAT,IAAI,EAAEM,MAAM,CAACK,MAAM,CAACjB,KAAK,CAACM,IAAI,CAAC,CAACY,GAAG,CAACC,MAAM,IAAE;QAAC,OAAQA,MAAM,CAACG,SAAS;MAAC,CAAC,CAAC;MACxE;MACAD,eAAe,EAAE,CAAC,SAAS;IAE5B,CAAC,EACD;MACC;MACAN,KAAK,EAAE,MAAM;MACb;MACAT,IAAI,EAACM,MAAM,CAACK,MAAM,CAACjB,KAAK,CAACM,IAAI,CAAC,CAACY,GAAG,CAACC,MAAM,IAAE;QAAC,OAAQA,MAAM,CAACI,SAAS;MAAC,CAAC,CAAC;MACvE;MACAF,eAAe,EAAE,CAAC,SAAS;IAE5B,CAAC;EAEF,CAAC;EACF,MAAMG,OAAO,GAAC;IACZC,UAAU,EAAE,IAAI;IACfC,aAAa,EAAC,CAAC;IACfC,OAAO,EAAE1B,WAAW;IACpB2B,MAAM,EAAE;MACRC,CAAC,EAAE;QACFC,KAAK,EAAE;UACNC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE,UAAU;UAChBC,IAAI,EACJ;YACCC,MAAM,EAAC,MAAM;YACbC,IAAI,EAAG;UACR;QAAC,CAAC;QACFC,IAAI,EAAE;UACPL,OAAO,EAAE;QACR;MAEF,CAAC;MACDM,CAAC,EAAE;QACFP,KAAK,EAAE;UACNC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE,eAAe;UACrBC,IAAI,EACJ;YACCC,MAAM,EAAC,MAAM;YACbC,IAAI,EAAG;UACR;QAAC,CAAC;QACFG,KAAK,EAAE;UACNC,GAAG,EAAE,CAAC;UACNC,QAAQ,EAAE;QACX,CAAC;QACDJ,IAAI,EAAE;UACPL,OAAO,EAAE;QACR;MACF;IACC;EACH,CAAC;EAGE,oBACIjC,OAAA,CAACF,GAAG;IAAC6C,MAAM,EAAE,GAAI;IAACnC,IAAI,EAAEA,IAAK;IAACkB,OAAO,EAAEA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE1D;AAACC,EAAA,GAtFQ/C,gBAAgB;AAwFzB,eAAeA,gBAAgB;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}